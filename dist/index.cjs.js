/** 
 * html2pdf-browser@1.0.1
 * 
 * Copyright (c) 2023 halo951 <https://github.com/halo951>
 * Released under MIT License
 * 
 * @author halo951(https://github.com/halo951)
 * @license MIT
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("jspdf"),t=require("html2canvas");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=n(e),o=n(t),a=function(){return a=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},a.apply(this,arguments)};function i(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function l(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}u((r=r.apply(e,t||[])).next())}))}function l(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(l){return function(u){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,l[0]&&(i=0)),i;)try{if(n=1,r&&(o=2&l[0]?r.return:l[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,l[1])).done)return o;switch(r=0,o&&(l=[2&l[0],o.value]),l[0]){case 0:case 1:o=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,r=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==l[0]&&2!==l[0])){i=0;continue}if(3===l[0]&&(!o||l[1]>o[0]&&l[1]<o[3])){i.label=l[1];break}if(6===l[0]&&i.label<o[1]){i.label=o[1],o=l;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(l);break}o[2]&&i.ops.pop(),i.trys.pop();continue}l=t.call(e,i)}catch(e){l=[6,e],r=0}finally{n=o=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,u])}}}var u=function(e,t){return i(void 0,void 0,void 0,(function(){var n,r;return l(this,(function(i){switch(i.label){case 0:return n=e.offsetWidth,r=e.offsetHeight,[4,o.default(e,a({width:n,height:r,windowWidth:n,windowHeight:r,scrollX:0,scrollY:0,scale:4,useCORS:!0,allowTaint:!0,imageTimeout:3e4,onclone:function(e,t){for(var n,r,o,a,i=0,l=Array.from(t.querySelectorAll("use[href]"));i<l.length;i++){var u=l[i];o=u.getAttribute("href"),a=document.querySelector(null!=o?o:""),u.parentNode&&(r=u.parentNode),r.innerHTML=null!==(n=null==a?void 0:a.innerHTML)&&void 0!==n?n:""}e.body.style.letterSpacing="0.0001px"}},t))];case 1:return[2,i.sent()]}}))}))};exports.html2canvas=u,exports.html2pdf=function(e,t,n,o){return i(void 0,void 0,void 0,(function(){var i,c,f,s,d,h,p,v,y;return l(this,(function(l){switch(l.label){case 0:i=new r.default(a({orientation:"portrait",unit:"pt"},n)),s=t instanceof Array?t:[t],e.includes(".pdf")||(e+=".pdf"),d=0,h=s,l.label=1;case 1:return d<h.length?(p=h[d],v=p.offsetWidth,y=p.offsetHeight,i.addPage("JPEG"),[4,u(p,o)]):[3,4];case 2:c=l.sent(),f=c.toDataURL("image/jpeg",1),i.addImage(f,"JPEG",0,0,v,y),l.label=3;case 3:return d++,[3,1];case 4:return i.deletePage(1),i.save(e),[2]}}))}))};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguY2pzLmpzIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBqc1BERk9wdGlvbnMgYXMgSUpzUERGT3B0aW9ucyB9IGZyb20gJ2pzcGRmJ1xyXG5pbXBvcnQgdHlwZSB7IE9wdGlvbnMgYXMgSUh0bWwyQ2FudmFzT3B0aW9ucyB9IGZyb20gJ2h0bWwyY2FudmFzJ1xyXG5pbXBvcnQgSnNQREYgZnJvbSAnanNwZGYnXHJcbmltcG9ydCBoMmMgZnJvbSAnaHRtbDJjYW52YXMnXHJcblxyXG4vKipcclxuICog5bCGaHRtbOi9rOWMluS4uiBjYW52YXNcclxuICpcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqICAxLiDop6PlhrPkvb/nlKggPHVzZSBocmVmPSdpZCc+IOagvOW8j+W8leeUqOeahHN2Z+a4suafk+mXrumimFxyXG4gKiAgMi4g6K6+572u5a2X6Ze06LedLCDop6PlhrPkuK3mlofmloflrZfmuLLmn5Pnqbrpl7TorqHnrpflr7zoh7TnmoTph43lj6Dpl67pophcclxuICpcclxuICogQHBhcmFtIGVsIOW+hea4suafk+iKgueCuVxyXG4gKiBAcGFyYW0gb3B0aW9ucyBodG1sMmNhbnZhcyDlj4LmlbBcclxuICogQHJldHVybnNcclxuICovXHJcbmV4cG9ydCBjb25zdCBodG1sMmNhbnZhcyA9IGFzeW5jIChcclxuICAgIGVsOiBIVE1MRWxlbWVudCxcclxuICAgIG9wdGlvbnM/OiBQYXJ0aWFsPElIdG1sMkNhbnZhc09wdGlvbnM+XHJcbik6IFByb21pc2U8SFRNTENhbnZhc0VsZW1lbnQ+ID0+IHtcclxuICAgIGNvbnN0IHsgb2Zmc2V0V2lkdGgsIG9mZnNldEhlaWdodCB9ID0gZWxcclxuICAgIC8vID4gY29udmVydCBodG1sIGVsIHRvIGNhbnZhc1xyXG4gICAgY29uc3QgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCA9IGF3YWl0IGgyYyhlbCwge1xyXG4gICAgICAgIHdpZHRoOiBvZmZzZXRXaWR0aCxcclxuICAgICAgICBoZWlnaHQ6IG9mZnNldEhlaWdodCxcclxuICAgICAgICB3aW5kb3dXaWR0aDogb2Zmc2V0V2lkdGgsXHJcbiAgICAgICAgd2luZG93SGVpZ2h0OiBvZmZzZXRIZWlnaHQsXHJcbiAgICAgICAgc2Nyb2xsWDogMCxcclxuICAgICAgICBzY3JvbGxZOiAwLFxyXG4gICAgICAgIHNjYWxlOiA0LFxyXG4gICAgICAgIHVzZUNPUlM6IHRydWUsXHJcbiAgICAgICAgYWxsb3dUYWludDogdHJ1ZSxcclxuICAgICAgICBpbWFnZVRpbWVvdXQ6IDMwICogMTAwMCxcclxuICAgICAgICBvbmNsb25lKGRvYzogRG9jdW1lbnQsIGVsZTogRWxlbWVudCk6IHZvaWQge1xyXG4gICAgICAgICAgICAvKiBmaXg6IOino+WGs+S9v+eUqCA8dXNlIGhyZWY9J2lkJz4g5qC85byP5byV55So55qEc3Zn5riy5p+T6Zeu6aKYICovXHJcbiAgICAgICAgICAgIGNvbnN0IHVzZTogQXJyYXk8RWxlbWVudD4gPSBBcnJheS5mcm9tKGVsZS5xdWVyeVNlbGVjdG9yQWxsKCd1c2VbaHJlZl0nKSlcclxuICAgICAgICAgICAgLyoqIHN2ZyDlm77moIcgKi9cclxuICAgICAgICAgICAgbGV0IHN2ZyE6IEhUTUxFbGVtZW50XHJcbiAgICAgICAgICAgIGxldCBpZCE6IHN0cmluZyB8IG51bGxcclxuICAgICAgICAgICAgLyoqIHN2ZyDlhoXlrrnlhYPntKAgKi9cclxuICAgICAgICAgICAgbGV0IHN2Z1N5bWJvbCE6IEVsZW1lbnQgfCBudWxsXHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgdSBvZiB1c2UpIHtcclxuICAgICAgICAgICAgICAgIGlkID0gdS5nZXRBdHRyaWJ1dGUoJ2hyZWYnKVxyXG4gICAgICAgICAgICAgICAgc3ZnU3ltYm9sID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihpZCA/PyAnJylcclxuICAgICAgICAgICAgICAgIGlmICh1LnBhcmVudE5vZGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdmcgPSB1LnBhcmVudE5vZGUgYXMgSFRNTEVsZW1lbnRcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHN2Zy5pbm5lckhUTUwgPSBzdmdTeW1ib2w/LmlubmVySFRNTCA/PyAnJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8qIGZpeDog6K6+572u5a2X6Ze06LedLCDop6PlhrPkuK3mlofmloflrZfmuLLmn5Pnqbrpl7TorqHnrpflr7zoh7TnmoTph43lj6Dpl67popggKi9cclxuICAgICAgICAgICAgZG9jLmJvZHkuc3R5bGUubGV0dGVyU3BhY2luZyA9ICcwLjAwMDFweCdcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm9wdGlvbnNcclxuICAgIH0pXHJcblxyXG4gICAgcmV0dXJuIGNhbnZhc1xyXG59XHJcblxyXG4vKiog5bCGIGh0bWwg6L2s5YyW5Li6IHBkZiDlubbkuIvovb1cclxuICpcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqICAxLiDlvZPkvb/nlKggZWNoYXJ0IOWbvuihqOaXtiwg5bqU5aOw5piO6YWN572uIGBlY2hhcnRzLmluaXQodGhpcy4kZWwgYXMgSFRNTERpdkVsZW1lbnQsIHVuZGVmaW5lZCwgeyBkZXZpY2VQaXhlbFJhdGlvOiAyIH0pYCwg5aSE55CG5riF5pmw5bqm6Zeu6aKYXHJcbiAqICAyLiDlvZPkvb/nlKjkuoYgPHVzZSBocmVmPScjaWQnPiDmlrnlvI8o5aaCOiBzdmctc3ByaXRlLWxvYWRlcikg5Yqg6L29c3Zn6LWE5rqQ5pe2LCDlupRcclxuICpcclxuICogQHBhcmFtIGZpbGVuYW1lIOS4i+i9veaWh+S7tuWQjVxyXG4gKiBAcGFyYW0gZWwg6ZyA6KaB6L2s5YyW55qEaHRtbOiKgueCuSwg5Y+v5Li65pWw57uEXHJcbiAqIEBwYXJhbSBqc1BERk9wdGlvbnMganNwZGYg5Y+C5pWwXHJcbiAqIEBwYXJhbSBodG1sMmNhbnZhc09wdGlvbnMgaHRtbDJjYW52YXMg5Y+C5pWwXHJcbiAqXHJcbiAqXHJcbiAqIEByZXR1cm5zIOi9rOaNouaIkOWKn+WQjiwg6Ieq5Yqo6Kem5Y+R5LiL6L295pON5L2cXHJcbiAqXHJcbiAqIEBhdXRob3IgbGliaW48bGliaW5AcGVyc2FneS5jb20+XHJcbiAqL1xyXG5leHBvcnQgY29uc3QgaHRtbDJwZGYgPSBhc3luYyAoXHJcbiAgICBmaWxlbmFtZTogc3RyaW5nLFxyXG4gICAgZWw6IEhUTUxFbGVtZW50IHwgQXJyYXk8SFRNTEVsZW1lbnQ+LFxyXG4gICAganNQREZPcHRpb25zPzogSUpzUERGT3B0aW9ucyxcclxuICAgIGh0bWwyY2FudmFzT3B0aW9ucz86IElIdG1sMkNhbnZhc09wdGlvbnNcclxuKTogUHJvbWlzZTx2b2lkPiA9PiB7XHJcbiAgICAvLyBAIOWunuS+i+WMliBwZGYg5a+56LGhXHJcbiAgICBjb25zdCBkb2MgPSBuZXcgSnNQREYoe1xyXG4gICAgICAgIC8qKiDmlrnlkJEgKi9cclxuICAgICAgICBvcmllbnRhdGlvbjogJ3BvcnRyYWl0JyxcclxuICAgICAgICAvKiog5YOP57Sg5Y2V5L2NICovXHJcbiAgICAgICAgdW5pdDogJ3B0JyxcclxuICAgICAgICAvLyAjIOWPguaVsOabv+aNolxyXG4gICAgICAgIC4uLmpzUERGT3B0aW9uc1xyXG4gICAgfSlcclxuXHJcbiAgICAvLyBAIGNhbnZhc1xyXG4gICAgbGV0IGNhbnZhcyE6IEhUTUxDYW52YXNFbGVtZW50XHJcbiAgICAvLyBAIGltYWdlJ3MgYmFzZTY0IGRhdGFcclxuICAgIGxldCBpbWFnZSE6IHN0cmluZ1xyXG5cclxuICAgIC8vIEAgdHJhbnNmb3JtIHRvIGFycmF5IGVsZW1lbnQnc1xyXG4gICAgY29uc3QgZWxzOiBBcnJheTxIVE1MRWxlbWVudD4gPSBlbCBpbnN0YW5jZW9mIEFycmF5ID8gZWwgOiBbZWxdXHJcblxyXG4gICAgLy8gPyDmo4Dmn6XlubbooaXlhajmlofku7blkI1cclxuICAgIGlmICghZmlsZW5hbWUuaW5jbHVkZXMoJy5wZGYnKSkgZmlsZW5hbWUgKz0gJy5wZGYnXHJcbiAgICAvLyA+IOino+aekCwg6L2s5YyW5Li6cGRmXHJcbiAgICBmb3IgKGNvbnN0IGVsIG9mIGVscykge1xyXG4gICAgICAgIGNvbnN0IHsgb2Zmc2V0V2lkdGgsIG9mZnNldEhlaWdodCB9ID0gZWxcclxuICAgICAgICAvLyA+IOa3u+WKoOaWsOmhtVxyXG4gICAgICAgIGRvYy5hZGRQYWdlKCdKUEVHJylcclxuICAgICAgICAvLyA+IHRyYW5zZm9ybSBlbCB0byBjYW52YXNcclxuICAgICAgICBjYW52YXMgPSBhd2FpdCBodG1sMmNhbnZhcyhlbCwgaHRtbDJjYW52YXNPcHRpb25zKVxyXG4gICAgICAgIC8vID4gdHJhbnNmb3JtIGNhbnZhcyB0byBpbWFnZShqcGcpXHJcbiAgICAgICAgaW1hZ2UgPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJywgMS4wKVxyXG4gICAgICAgIC8vID4gYXBwZW5kIHRvIHBkZidzIGRvY1xyXG4gICAgICAgIGRvYy5hZGRJbWFnZShpbWFnZSwgJ0pQRUcnLCAwLCAwLCBvZmZzZXRXaWR0aCwgb2Zmc2V0SGVpZ2h0KVxyXG4gICAgfVxyXG4gICAgLy8gPiDliKDpmaTnqbrpobXpnaJcclxuICAgIGRvYy5kZWxldGVQYWdlKDEpXHJcbiAgICAvLyA+IOinpuWPkeS/neWtmOS4i+i9vVxyXG4gICAgZG9jLnNhdmUoZmlsZW5hbWUpXHJcbn1cclxuIl0sIm5hbWVzIjpbImh0bWwyY2FudmFzIiwiZWwiLCJvcHRpb25zIiwiX19hd2FpdGVyIiwib2Zmc2V0V2lkdGgiLCJvZmZzZXRIZWlnaHQiLCJoMmMiLCJfX2Fzc2lnbiIsIndpZHRoIiwiaGVpZ2h0Iiwid2luZG93V2lkdGgiLCJ3aW5kb3dIZWlnaHQiLCJzY3JvbGxYIiwic2Nyb2xsWSIsInNjYWxlIiwidXNlQ09SUyIsImFsbG93VGFpbnQiLCJpbWFnZVRpbWVvdXQiLCJvbmNsb25lIiwiZG9jIiwiZWxlIiwic3ZnIiwiaWQiLCJzdmdTeW1ib2wiLCJ1c2VfMSIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfaSIsImxlbmd0aCIsInUiLCJnZXRBdHRyaWJ1dGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwYXJlbnROb2RlIiwiaW5uZXJIVE1MIiwiX2EiLCJib2R5Iiwic3R5bGUiLCJsZXR0ZXJTcGFjaW5nIiwic2VudCIsImZpbGVuYW1lIiwianNQREZPcHRpb25zIiwiaHRtbDJjYW52YXNPcHRpb25zIiwiSnNQREYiLCJvcmllbnRhdGlvbiIsInVuaXQiLCJlbHMiLCJpbmNsdWRlcyIsImVsc18xIiwiZWxfMSIsImFkZFBhZ2UiLCJjYW52YXMiLCJpbWFnZSIsInRvRGF0YVVSTCIsImFkZEltYWdlIiwiZGVsZXRlUGFnZSIsInNhdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs4dkRBZ0JhLElBQUFBLEVBQWMsU0FDdkJDLEVBQ0FDLEdBQXNDLE9BQUFDLE9BQUEsT0FBQSxPQUFBLEdBQUEscUVBSUosT0FGMUJDLEVBQThCSCxFQUFuQkcsWUFBRUMsRUFBaUJKLGVBRUUsQ0FBQSxFQUFBSyxFQUFBQSxRQUFJTCxFQUFFTSxFQUFBLENBQzFDQyxNQUFPSixFQUNQSyxPQUFRSixFQUNSSyxZQUFhTixFQUNiTyxhQUFjTixFQUNkTyxRQUFTLEVBQ1RDLFFBQVMsRUFDVEMsTUFBTyxFQUNQQyxTQUFTLEVBQ1RDLFlBQVksRUFDWkMsYUFBYyxJQUNkQyxRQUFPLFNBQUNDLEVBQWVDLEdBUW5CLFVBSklDLEVBQ0FDLEVBRUFDLE1BQ1lDLEVBTllDLE1BQU1DLEtBQUtOLEVBQUlPLGlCQUFpQixjQU01Q0MsRUFBR0osRUFBQUssT0FBSEQsSUFBSyxDQUFoQixJQUFNRSxFQUFDTixFQUFBSSxHQUNSTixFQUFLUSxFQUFFQyxhQUFhLFFBQ3BCUixFQUFZUyxTQUFTQyxjQUFjWCxRQUFBQSxFQUFNLElBQ3JDUSxFQUFFSSxhQUNGYixFQUFNUyxFQUFFSSxZQUVaYixFQUFJYyxVQUFnQyxRQUFwQkMsRUFBQWIsYUFBUyxFQUFUQSxFQUFXWSxpQkFBUyxJQUFBQyxFQUFBQSxFQUFJLEVBQzNDLENBRURqQixFQUFJa0IsS0FBS0MsTUFBTUMsY0FBZ0IsYUFFaENyQyxZQUdQLE1BQUEsQ0FBQSxFQWpDa0NrQyxFQStCaENJLGNBR0wseUNBa0J1QixTQUNwQkMsRUFDQXhDLEVBQ0F5QyxFQUNBQyxHQUF3QyxPQUFBeEMsT0FBQSxPQUFBLE9BQUEsR0FBQSxtRkFHbENnQixFQUFNLElBQUl5QixFQUFLLFFBQUFyQyxFQUFBLENBRWpCc0MsWUFBYSxXQUViQyxLQUFNLE1BRUhKLElBU0RLLEVBQTBCOUMsYUFBY3dCLE1BQVF4QixFQUFLLENBQUNBLEdBR3ZEd0MsRUFBU08sU0FBUyxVQUFTUCxHQUFZLFFBRXhCYixFQUFBLEVBQUhxQixFQUFHRixtQkFBSCxPQUFBbkIsWUFBWnNCLEVBQUFELEVBQUFyQixHQUNPeEIsRUFBOEI4QyxFQUFuQjlDLFlBQUVDLEVBQWlCNkMsZUFFdEMvQixFQUFJZ0MsUUFBUSxRQUVILENBQUEsRUFBTW5ELEVBQVlrRCxFQUFJUCxLQUxmLENBQUEsRUFBQSxVQUtoQlMsRUFBU2hCLFNBRVRpQixFQUFRRCxFQUFPRSxVQUFVLGFBQWMsR0FFdkNuQyxFQUFJb0MsU0FBU0YsRUFBTyxPQUFRLEVBQUcsRUFBR2pELEVBQWFDLDJCQVRsQ3VCLHdCQVlqQlQsRUFBSXFDLFdBQVcsR0FFZnJDLEVBQUlzQyxLQUFLaEIifQ==
