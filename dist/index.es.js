/** 
 * html2pdf-browser@1.0.1
 * 
 * Copyright (c) 2023 halo951 <https://github.com/halo951>
 * Released under MIT License
 * 
 * @author halo951(https://github.com/halo951)
 * @license MIT
 */
import e from"jspdf";import t from"html2canvas";var n=function(){return n=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},n.apply(this,arguments)};function r(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function l(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}u((r=r.apply(e,t||[])).next())}))}function o(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(l){return function(u){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,l[0]&&(i=0)),i;)try{if(n=1,r&&(o=2&l[0]?r.return:l[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,l[1])).done)return o;switch(r=0,o&&(l=[2&l[0],o.value]),l[0]){case 0:case 1:o=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,r=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==l[0]&&2!==l[0])){i=0;continue}if(3===l[0]&&(!o||l[1]>o[0]&&l[1]<o[3])){i.label=l[1];break}if(6===l[0]&&i.label<o[1]){i.label=o[1],o=l;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(l);break}o[2]&&i.ops.pop(),i.trys.pop();continue}l=t.call(e,i)}catch(e){l=[6,e],r=0}finally{n=o=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,u])}}}var a=function(e,a){return r(void 0,void 0,void 0,(function(){var r,i;return o(this,(function(o){switch(o.label){case 0:return r=e.offsetWidth,i=e.offsetHeight,[4,t(e,n({width:r,height:i,windowWidth:r,windowHeight:i,scrollX:0,scrollY:0,scale:4,useCORS:!0,allowTaint:!0,imageTimeout:3e4,onclone:function(e,t){for(var n,r,o,a,i=0,l=Array.from(t.querySelectorAll("use[href]"));i<l.length;i++){var u=l[i];o=u.getAttribute("href"),a=document.querySelector(null!=o?o:""),u.parentNode&&(r=u.parentNode),r.innerHTML=null!==(n=null==a?void 0:a.innerHTML)&&void 0!==n?n:""}e.body.style.letterSpacing="0.0001px"}},a))];case 1:return[2,o.sent()]}}))}))},i=function(t,i,l,u){return r(void 0,void 0,void 0,(function(){var r,c,f,s,h,p,d,v,y;return o(this,(function(o){switch(o.label){case 0:r=new e(n({orientation:"portrait",unit:"pt"},l)),s=i instanceof Array?i:[i],t.includes(".pdf")||(t+=".pdf"),h=0,p=s,o.label=1;case 1:return h<p.length?(d=p[h],v=d.offsetWidth,y=d.offsetHeight,r.addPage("JPEG"),[4,a(d,u)]):[3,4];case 2:c=o.sent(),f=c.toDataURL("image/jpeg",1),r.addImage(f,"JPEG",0,0,v,y),o.label=3;case 3:return h++,[3,1];case 4:return r.deletePage(1),r.save(t),[2]}}))}))};export{a as html2canvas,i as html2pdf};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
